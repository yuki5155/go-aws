AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sample-app

  Sample SAM Template for sample-app
Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - stg
      - prd
    Description: Environment name

  CustomDomainName:
    Type: String
    Description: Custom domain name

  HostedZoneId:
    Type: String
    Description: Hosted zone ID

  CertificateArn:
    Type: String
    Description: ARN of existing ACM certificate

  CookieDomain:
    Type: String
    Description: Cookie domain
    Default: ''

  AllowOrigin:
    Type: String
    Description: CORS allow origin
    Default: 'https://mydevportal.com'

  CognitoDomain:
    Type: String
    Description: Cognito domain name
    Default: ''

  CognitoClientID:
    Type: String
    Description: Cognito app client ID
    Default: ''

  CognitoClientSecret:
    Type: String
    Description: Cognito app client secret
    Default: ''

  CognitoUserPoolID:
    Type: String
    Description: Cognito user pool ID
    Default: ''

  CognitoCallbackURL:
    Type: String
    Description: Cognito callback URL
    Default: ''

Globals:
  Function:
    Timeout: 5
    MemorySize: 128
    Tracing: Active

Resources:
  # API Gateway定義
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev-internal # 内部用ステージ名（実際には使用しない）
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      BinaryMediaTypes:
        - '*/*'
      # CORSを静的に設定
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: !Sub "'${AllowOrigin}'"
        AllowCredentials: true

  # 明示的なGatewayResponseの定義
  Gateway4XXResponse:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: !Sub "'${AllowOrigin}'"
        gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        gatewayresponse.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
        gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
      ResponseType: DEFAULT_4XX
      RestApiId: !Ref ApiGateway

  Gateway5XXResponse:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: !Sub "'${AllowOrigin}'"
        gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        gatewayresponse.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
        gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
      ResponseType: DEFAULT_5XX
      RestApiId: !Ref ApiGateway

  # Custom domain
  ApiCustomDomain:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !Ref CustomDomainName
      RegionalCertificateArn: !Ref CertificateArn
      EndpointConfiguration:
        Types:
          - REGIONAL
      SecurityPolicy: TLS_1_2

  # API Stage - ユニークな名前に変更
  ApiCustomStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId: !Ref ApiGateway
      DeploymentId: !Ref ApiDeployment
      StageName: !Sub "${Environment}-custom"
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          DataTraceEnabled: true

  # Create an explicit API Deployment
  ApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - HelloWorldFunction
      - HelloWorldPostFunction
      - CallbackFunction
      - CallbackOptionsMethod
      - Gateway4XXResponse
      - Gateway5XXResponse
    Properties:
      RestApiId: !Ref ApiGateway
      Description: "Deployment for API Gateway"

  # Base path mapping
  ApiBasePath:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn: 
      - ApiCustomStage
      - ApiGateway
    Properties:
      DomainName: !Ref CustomDomainName
      RestApiId: !Ref ApiGateway
      Stage: !Sub "${Environment}-custom"
      BasePath: api

  # DNS A Record
  ApiDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref CustomDomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt ApiCustomDomain.RegionalDomainName
        HostedZoneId: !GetAtt ApiCustomDomain.RegionalHostedZoneId

  # 明示的に/callbackリソースを定義
  CallbackResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGateway
      ParentId: !GetAtt ApiGateway.RootResourceId
      PathPart: "callback"
      
  # OPTIONS メソッドを明示的に定義
  CallbackOptionsMethod:
    Type: AWS::ApiGateway::Method
    DependsOn: CallbackResource
    Properties:
      HttpMethod: OPTIONS
      ResourceId: !Ref CallbackResource
      RestApiId: !Ref ApiGateway
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        IntegrationHttpMethod: OPTIONS
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: !Sub "'${AllowOrigin}'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            ResponseTemplates:
              application/json: '{}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Credentials: true

  # 明示的なPOSTメソッドの追加
  CallbackPostMethod:
    Type: AWS::ApiGateway::Method
    DependsOn: CallbackResource
    Properties:
      HttpMethod: POST
      ResourceId: !Ref CallbackResource
      RestApiId: !Ref ApiGateway
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CallbackFunction.Arn}/invocations
      MethodResponses:
        - StatusCode: 200

  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: hello-world/
      Handler: bootstrap
      Runtime: provided.al2
      Architectures:
        - x86_64
      Events:
        HelloGet:
          Type: Api
          Properties:
            Path: /hello
            Method: GET
            RestApiId: !Ref ApiGateway
      Environment:
        Variables:
          GOCACHE: /tmp/.cache/go-build
          GOPATH: /tmp/go
          COOKIE_DOMAIN: !Ref CookieDomain
          ALLOW_ORIGIN: !Ref AllowOrigin
          
  HelloWorldPostFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: hello-world-post/
      Handler: bootstrap
      Runtime: provided.al2
      Architectures:
        - x86_64
      Events:
        HelloPost:
          Type: Api
          Properties:
            Path: /hello-post
            Method: POST
            RestApiId: !Ref ApiGateway
      Environment:
        Variables:
          GOCACHE: /tmp/.cache/go-build
          GOPATH: /tmp/go
          COOKIE_DOMAIN: !Ref CookieDomain
          ALLOW_ORIGIN: !Ref AllowOrigin

  CallbackFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: callback/
      Handler: bootstrap
      Runtime: provided.al2
      Architectures:
        - x86_64
      # Lambdaへの直接のAPIイベントを削除（明示的なメソッドを使用）
      Environment:
        Variables:
          GOCACHE: /tmp/.cache/go-build
          GOPATH: /tmp/go
          COOKIE_DOMAIN: !Ref CookieDomain
          ALLOW_ORIGIN: !Ref AllowOrigin
          COGNITO_DOMAIN: !Ref CognitoDomain
          COGNITO_CLIENT_ID: !Ref CognitoClientID
          COGNITO_CLIENT_SECRET: !Ref CognitoClientSecret
          COGNITO_USER_POOL_ID: !Ref CognitoUserPoolID
          COGNITO_CALLBACK_URL: !Ref CognitoCallbackURL

  # Create a logical ID for the API method that can be referenced in DependsOn
  HelloGet:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGateway
      ResourceId: !GetAtt ApiGateway.RootResourceId
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HelloWorldFunction.Arn}/invocations"

  # Lambda実行権限
  CallbackFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref CallbackFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/POST/callback

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Join:
        - ''
        - - ApplicationInsights-SAM-
          - Ref: AWS::StackName
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Fn::Join:
        - ''
        - - ApplicationInsights-SAM-
          - Ref: AWS::StackName
      AutoConfigurationEnabled: 'true'
    DependsOn: ApplicationResourceGroup

Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL
    Value: !Sub https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/

  CustomDomainUrl:
    Description: Custom domain URL
    Value: !Sub https://${CustomDomainName}/api/

  ApiGatewayRestApiId:
    Description: API Gateway REST API ID
    Value: !Ref ApiGateway

  ApiGatewayRestApiStage:
    Description: API Gateway REST API Stage
    Value: !Sub "${Environment}-custom"